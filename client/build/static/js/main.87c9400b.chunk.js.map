{"version":3,"sources":["components/Project.js","components/ProjectsTable.js","views/Homepage.js","views/AddProject.js","components/Register.js","components/Login.js","views/Frist.js","App.js","reportWebVitals.js","index.js"],"names":["moment","require","format","Project","project","myTime","date","useState","status","setProjectStatus","handleClick","e","target","name","axios","put","_id","then","res","console","log","data","style","backgroundColor","onClick","delete","navigate","catch","err","ProjectsTable","props","Projects","setProjects","class","length","map","id","Homepage","get","to","AddProject","setname","setdate","errors","setErrors","index","onSubmit","preventDefault","post","errorResponse","response","errorArr","Object","keys","key","push","message","type","onChange","value","Register","setUser","firstName","lastName","email","password","confirmPassword","inputFields","setInputFields","handleChange","event","user","Login","Frist","App","useEffect","className","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87c9400b.chunk.js","sourcesContent":["import { useState } from 'react'\nimport axios from \"axios\"\nimport { navigate } from \"@reach/router\"\nvar moment = require('moment');\nmoment().format(); \n\nconst Project = ({ project }) => {\n\n    const myTime = moment(project.date).format(\"dddd, MMMM Do YYYY\");\n    const [status, setProjectStatus] = useState(project.status)\n    const handleClick = (e) => {\n        if (e.target.name === 'start') {\n            setProjectStatus(\"prog\")\n            // axios to save it on the server\n            axios\n            .put(\"http://localhost:8000/api/Projects/\" + project._id, {status:\"prog\"} )\n            .then((res) => { console.log(res.data)\n            })\n        }\n\n        if (e.target.name === 'prog') {\n            setProjectStatus(\"delete\")\n            axios\n            .put(\"http://localhost:8000/api/Projects/\" + project._id, {status:\"delete\"})\n            .then((res) => { console.log(res.data)\n            })\n\n        }\n        if (e.target.name === 'delete') {\n            setProjectStatus(\"delete\")\n            axios\n            .put(\"http://localhost:8000/api/Projects/\" + project._id, status )\n            .then((res) => { console.log(res.data)\n            })\n\n\n        }\n    }\n\n    const handleClickdelete = (e) => {\n        setProjectStatus(\"delete\")\n        axios\n            .delete(\"http://localhost:8000/api/Projects/\" + project._id)\n            .then((res) => {\n                navigate(\"/dashboard\")\n            })\n            .catch(err => console.log(err))\n    }\n\n\n\n    return (\n        <tr>\n\n\n<td>\n{status === \"start\"?\n(\n   <>\n    <p>{project.name}</p>\n    <p>{myTime}</p>\n    <button\n        name=\"start\"\n        style={status === \"start\" ? { backgroundColor: \"green\" } : {}}\n        onClick={handleClick}\n    >\n        start\n</button>\n\n\n</>\n):null\n}\n\n</td>       \n\n            {/* <td>\n                <p>{project.name}</p>\n                <p>{myTime}</p>\n                <button\n                    name=\"prog\"\n                    style={status === \"prog\" ? { backgroundColor: \"blue\" } : {}}\n                    onClick={handleClick}\n                >\n                    in prog\n    </button>\n\n            </td> */}\n\n\n<td>\n{status === \"prog\"?\n(\n   <>\n    <p>{project.name}</p>\n    <p>{myTime}</p>\n    <button\n        name=\"prog\"\n        style={status === \"prog\" ? { backgroundColor: \"blue\" } : {}}\n        onClick={handleClick}\n    >\n        in prog\n</button>\n\n\n</>\n):null\n}\n\n</td>       \n\n\n\n\n\n{/* \n            <td>\n                <p>{project.name}</p>\n                <p>{myTime}</p>\n                <button\n                    name=\"delete\"\n                    style={status === \"delete\" ? { backgroundColor: \"red\" } : {}}\n                    onClick={handleClickdelete}\n                >\n                    delete\n    </button>\n            </td> */}\n\n\n\n            <td>\n{status === \"delete\"?\n(\n   <>\n    <p>{project.name}</p>\n    <p>{myTime}</p>\n    <button\n        name=\"delete\"\n        style={status === \"delete\" ? { backgroundColor: \"red\" } : {}}\n        onClick={handleClickdelete}\n    >\n          delete\n</button>\n\n\n</>\n):null\n}\n\n</td> \n\n\n\n        </tr>\n    )\n}\n\nexport default Project\n\n\n\n","import React from \"react\";\nimport Project from \"../components/Project\"\n\n\nconst ProjectsTable = (props) => {\n    const { Projects, setProjects } = props;\n\n\n    return (\n        <>\n            <table class=\"table\" >\n                <thead>\n                    <tr class=\"table-primary\">\n                        <th>Backlg</th>\n                        <th>In Progress</th>\n                        <th>Completed</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {Projects.length > 0 &&\n                        Projects.map((project) => <Project key={project.id} project={project} />)}\n                </tbody>\n            </table>\n        </>\n    )\n}\n\nexport default ProjectsTable;\n\n\n","import React, { useEffect } from \"react\";\nimport { Link, navigate } from \"@reach/router\";\nimport ProjectsTable from \"../components/ProjectsTable\";\nimport axios from \"axios\";\n\nconst Homepage = (props) => {\n    const { Projects, setProjects } = props;\n    // useEffect(() => {\n    //     axios.get(\"http://localhost:8000/api/Projects\")\n    //         .then((res) => {\n    //             setProjects(res.data.sort((a, b) => {\n    //                 if (a.name < b.name) { return -1 };\n    //                 return (a.name > b.name ? 1 : 0);\n    //             }));\n    //         })\n    //         .catch((err) => { console.log(err); })\n    // }, [setProjects]);\n\n    const handleClick = (e) => {\n        axios\n            .get(\"http://localhost:8000/api/logout\")\n            .then((res) => {\n                console.log(res)\n                navigate(\"/\")\n            })\n            .catch((err) => console.log(err))\n    }\n\n\n    return (\n        <>\n        <h1>Peoject Manager</h1>\n            <button onClick={handleClick}>Logout</button>\n\n            <ProjectsTable Projects={Projects} setProjects={setProjects} />\n\n            <Link class=\"btn btn-primary\" to=\"/Projects/new\">Add an Project</Link>\n\n        </>\n    )\n};\n\nexport default Homepage;","import React, { useState } from \"react\";\nimport axios from \"axios\"\n\nimport { Link } from \"@reach/router\";\n\n\n\nconst AddProject = (props) => {\n    //keep track of what is being typed via useState hook\n    const [name, setname] = useState(\"\")\n    const [date, setdate] = useState(\"\")\n    const [errors, setErrors] = useState([])\n    //handler when the form is submitted\n    const onSubmitHandler = (e) => {\n        //prevent default behavior of the submit\n        e.preventDefault()\n        //make a post request to create a new person\n        axios\n            .post(\"http://localhost:8000/api/Projects\", {\n                name,\n                date,\n            })\n            .then((res) => console.log(res))\n            .catch((err) => {\n                const errorResponse = err.response.data.errors // Get the errors from err.response.data\n                const errorArr = [] // Define a temp error array to push the messages in\n                for (const key of Object.keys(errorResponse)) {\n                    // Loop through all errors and get the messages\n                    errorArr.push(errorResponse[key].message)\n                }\n                // Set Errors\n                setErrors(errorArr)\n            })\n    }\n\n\n    //onChange to update name and date\n    return (\n        <>\n        <h1>Peoject Manager</h1>\n          {errors.map((err, index) => <p key={index}>{err}</p>)}\n            <form onSubmit={onSubmitHandler}>\n                <p>\n                    <label>Project Name</label>\n                    <br />\n                    <input type=\"text\" onChange={(e) => setname(e.target.value)} />\n                </p>\n                <p>\n                    <label>Date </label>\n                    <br />\n                    <input type=\"date\" onChange={(e) => setdate(e.target.value)} />\n                </p>\n                <input type=\"submit\" />\n            </form>\n            <Link to=\"/dashboard\">Home</Link>\n        </>\n    )\n}\n\nexport default AddProject;\n\n","import { navigate } from '@reach/router'\nimport axios from 'axios'\nimport { useState } from 'react'\n\nconst Register = ({ setUser }) => {\n  const [inputFields, setInputFields] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  })\n\n  const [errors, setErrors] = useState([])\n\n  const handleSubmit = (event) => {\n    console.log(\"submitting form\")\n    event.preventDefault()\n    // send registration info to server\n    axios\n      .post(\"http://localhost:8000/api/register\", inputFields)\n      .then((res) => {\n        console.log(res.data)\n        // user is returned\n        // we need to save the user info so we know someone is logged in\n        setUser(res.data.user)\n        // navigate to dashboard\n        navigate(\"/dashboard\")\n      })\n      .catch((err) => {\n        const errorResponse = err.response.data.errors // Get the errors from err.response.data\n        const errorArr = [] // Define a temp error array to push the messages in\n        for (const key of Object.keys(errorResponse)) {\n            // Loop through all errors and get the messages\n            errorArr.push(errorResponse[key].message)\n        }\n        // Set Errors\n        setErrors(errorArr)\n    })\n  }\n\n  const handleChange = (e) => {\n    console.log(\"changing state\")\n    setInputFields({\n      ...inputFields,\n      [e.target.name]: e.target.value,\n    })\n  }\n\n  return (\n    <>\n              {errors.map((err, index) => <p key={index}>{err}</p>)}\n    <form onSubmit={handleSubmit}>\n      <p>\n        firstName\n        <input type=\"text\" name=\"firstName\" onChange={handleChange} />\n      </p>\n      <p>\n        lastName\n        <input type=\"text\" name=\"lastName\" onChange={handleChange} />\n      </p>\n      <p>\n        email\n        <input type=\"text\" name=\"email\" onChange={handleChange} />\n      </p>\n      <p>\n        password\n        <input type=\"text\" name=\"password\" onChange={handleChange} />\n      </p>\n      <p>\n        confirmPassword\n        <input type=\"text\" name=\"confirmPassword\" onChange={handleChange} />\n      </p>\n      <button type=\"submit\">Register</button>\n    </form>\n    </>\n  )\n}\n\nexport default Register","import { navigate } from \"@reach/router\"\nimport axios from \"axios\"\nimport { useState } from 'react'\n\nconst Login = ({ setUser }) => {\n  const [inputFields, setInputFields] = useState({\n    email: \"\",\n    password: \"\",\n  })\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    axios\n      .post(\"http://localhost:8000/api/login\", inputFields)\n      .then((res) => {\n        console.log(res.data.user)\n        setUser(res.data.user)\n        navigate('/dashboard')\n      })\n      .catch((err) => console.log(err))\n  }\n\n  const handleChange = (e) => {\n    console.log(\"changing state\")\n    setInputFields({\n      ...inputFields,\n      [e.target.name]: e.target.value,\n    })\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <p>\n        email\n        <input type=\"text\" name=\"email\" onChange={handleChange}/>\n      </p>\n      <p>\n        password\n        <input type=\"text\" name=\"password\" onChange={handleChange}/>\n      </p>\n      <button type=\"submit\">Login</button>\n    </form>\n  )\n}\n\nexport default Login","import { navigate } from \"@reach/router\"\nimport axios from \"axios\"\nimport { useEffect, useState } from \"react\"\nimport Register from \"../components/Register\"\nimport Login from \"../components/Login\"\n\nconst Frist = () => {\n  const [user, setUser] = useState(null)\n\n\n  return (\n    <div>\n      <Register setUser={setUser} ></Register>\n      <Login setUser={setUser} ></Login>\n    </div>\n  )\n}\nexport default Frist","import React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { Router } from \"@reach/router\";\nimport './App.css';\nimport Homepage from './views/Homepage';\nimport AddProject from './views/AddProject';\nimport Frist from './views/Frist';\n\nimport \"bootstrap/dist/css/bootstrap.css\";\n\n\n\nfunction App() {\n  const [user, setUser] = useState(null)\n  const [Projects, setProjects] = useState([]);\n\n  useEffect(() => {\n    axios.get(\"http://localhost:8000/api/Projects\")\n      .then((res) => { setProjects(res.data) })\n      .catch((err) => { console.log(err); })\n  }, [])\n\n  return (\n\n\n    <div className=\"App\">\n      \n      <Router>\n\n        <Frist path=\"/\" setUser={setUser} />\n        <Homepage path=\"/dashboard\" Projects={Projects} setProjects={setProjects} user={user} />\n        <AddProject path=\"/Projects/new\"  Projects={Projects} setProjects={setProjects}  />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}